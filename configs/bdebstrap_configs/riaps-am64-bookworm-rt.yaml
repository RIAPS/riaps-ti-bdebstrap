---
mmdebstrap:
  architectures:
    - arm64
  mode: auto
  keyrings:
    - /usr/share/keyrings/debian-archive-keyring.gpg
  suite: bookworm
  variant: standard
  components:
    - main
    - contrib
    - non-free-firmware
  packages:
    - build-essential
    - gpg
    - curl
    - firmware-ti-connectivity
    - init
    - iproute2
    - less
    - libdrm-dev
    - libpam-systemd
    - locales
    - neofetch
    - network-manager
    - net-tools
    - openssh-server
    - sudo
    - vim
    - k3conf
    - weston
    - cryptodev-linux-dkms
    - firmware-ti-ipc-am64
    - firmware-cnm-wave
    - firmware-ti-prueth-am64
    - firmware-ti-pruhsr-am64
    - firmware-ti-prusw-am64
    - libti-rpmsg-char
    - libti-rpmsg-char-dev
    - libpru-pssp-dev
    - pru-pssp
    - parted
    - e2fsprogs
    # Pull TI built Linux Kernel
    - linux-image-6.1.80-rt26-k3-rt
    - linux-headers-6.1.80-rt26-k3-rt
    - linux-libc-dev
    # RIAPS Platform Packages
    - apparmor
    - apparmor-profiles
    - apparmor-profiles-extra
    - apparmor-utils
    - apt-transport-https
    - autoconf
    - autogen
    - automake
    - bison
    - byacc
    - can-utils
    - cargo
    # build: conflicts with systemd-timesyncd, time-daemon - chrony
    - cmake
    - flex
    - gpsd
    - git
    # build: package not found - gpio
    - htop
    - ifupdown
    - iptables
    - libargon2-0-dev
    - libasio-dev
    - libboost-dev
    - libcap-dev
    - libcurl4-gnutls-dev
    #- libcurl4-openssl-dev -- this package conflicts with libcurl4-gnutls-dev (needed for opendht)
    - libffi-dev
    - libgnutls30
    - libgnutls28-dev
    # build: package not found - libgpio-dev
    - libhttp-parser-dev
    - libiio-utils
    - libjsoncpp-dev
    - liblz4-1
    - liblz4-dev
    - libmsgpackc2
    - libmsgpack-dev
    - libncurses5-dev
    - libpcap0.8
    - libpcap-dev
    - libreadline-dev
    - libssh-4
    - libssh-dev
    - libssl3
    - libssl-dev
    - libsystemd-dev
    - libtool
    - libtool-bin
    - libuuid1
    - linuxptp
    - libzmq5
    - libzmq3-dev
    - make
    - nano
    - nettle-dev
    - openssl
    - pkg-config
    - pps-tools
    - python-is-python3
    - python3
    - python3-dev
    - python3-pip
    - python3-pkgconfig
    - python3-setuptools
    - python3-smbus
    - python3.11-venv
    - rdate
    - rsyslog
    - rustc
    - quota
    - software-properties-common
    - tmux
    - uuid-dev
    - wget
  mirrors:
    - http://deb.debian.org/debian
  setup-hooks:
      # Setup TI Debian Package Repository
    - 'mkdir -p $1/etc/apt/sources.list.d/'
    - 'wget https://raw.githubusercontent.com/TexasInstruments/ti-debpkgs/main/ti-debpkgs.sources -P $1/etc/apt/sources.list.d/'
      # Setup Apt repository preferences
    - 'mkdir -p $1/etc/apt/preferences.d/'
    - 'printf "Package: *\nPin: origin TexasInstruments.github.io\nPin-Priority: 1001" >> $1/etc/apt/preferences.d/ti-debpkgs'
      # Prioritize customized Kernel for RIAPS
    - 'printf "Package: *\nPin: origin https://riaps.isis.vanderbilt.edu/aptrepo/\nPin-Priority: 1050" >> $1/etc/apt/preferences.d/riaps-debpkgs'
      # Setup Kernel post-install scripts
    - 'mkdir -p $1/etc/kernel/postinst.d/'
    - 'echo "PWD = $PWD"'
    - 'upload target/kernel/postinst.d/cp-kernel-and-overlays /etc/kernel/postinst.d/cp-kernel-and-overlays'
    - 'chmod a+x $1/etc/kernel/postinst.d/cp-kernel-and-overlays'
  essential-hooks:
    # FIXME: Find a better workaround instead of sleep
    - 'sleep 10' # workaround for /proc resource busy unable to umount issue
  customize-hooks:
      # Remove passwd for root user
    - 'chroot "$1" passwd --delete root'
      # Fix apt install mandb permission issue
    - 'chroot "$1" chown -R man: /var/cache/man/'
    - 'chroot "$1" chmod -R 755 /var/cache/man/'
      # update packages to avoid mandatory update after first boot
    - 'chroot "$1" apt-get update'
      # Setup .bashrc for clean command-line experience
    - 'chroot "$1" cp /etc/skel/.bashrc ~/.bashrc'
      # Enable ssh to root user without password
    - 'chroot "$1" echo "PermitRootLogin yes" >> $1/etc/ssh/sshd_config'
    - 'chroot "$1" echo "PermitEmptyPasswords yes" >> $1/etc/ssh/sshd_config'
      # Resize Rootfs Service
    - 'chroot "$1" mkdir -p /usr/bin'
    - 'upload target/resize_rootfs/resize_rootfs.sh /usr/bin/resize_rootfs.sh'
    - 'chroot "$1" chmod a+x /usr/bin/resize_rootfs.sh'
    - 'chroot "$1" mkdir -p /etc/systemd/system/'
    - 'upload target/resize_rootfs/resize_rootfs.service /etc/systemd/system/resize_rootfs.service'
    - '$BDEBSTRAP_HOOKS/enable-units "$1" resize_rootfs'
      # Add RIAPS Specific Hooks
    - 'chroot "$1" mkdir -p /tmp/riaps/'
    - 'chroot "$1" mkdir -p /opt/riaps'
      # Setup RIAPS Apt repository (custom kernel found here)
    - 'chroot "$1" wget https://riaps.isis.vanderbilt.edu/keys/riapspublic.key -P /tmp/riaps'
    - 'chroot "$1" gpg --dearmor /tmp/riaps/riapspublic.key'
    - 'chroot "$1" mv /tmp/riaps/riapspublic.key.gpg /usr/share/keyrings/riaps-archive-keyring.gpg'
    - 'upload target/riaps/sysfiles/etc/apt/sources.list.d/riaps.list /etc/apt/sources.list.d/riaps.list'
      # Setup ZMQ repo with draft APIs
    - 'chroot "$1" wget https://download.opensuse.org/repositories/network:/messaging:/zeromq:/release-draft/Debian_12/Release.key -P /tmp/riaps'
    - 'chroot "$1" gpg --dearmor /tmp/riaps/Release.key'
    - 'chroot "$1" mv /tmp/riaps/Release.key.gpg /usr/share/keyrings/zeromq-archive-keyring.gpg'
    - 'upload target/riaps/sysfiles/etc/apt/sources.list.d/zeromq.list /etc/apt/sources.list.d/zeromq.list'
    - 'chroot "$1" apt-get update'
    - 'chroot "$1" apt-get install libzmq5 libzmq3-dev -y'
      # Install RIAPS built Linux kernel
      # MM TODO: still getting errors in install, put this aside right now
    #- 'chroot "$1" apt-get install linux-image-6.1.80-rt26-k3-rt=6.1.80-rt26-k3-rt-8 linux-headers-6.1.80-rt26-k3-rt=6.1.80-rt26-k3-rt-8 linux-libc-dev=6.1.80-rt26-k3-rt-8 -y'
      # Upload system files
    - 'upload target/riaps/sysfiles/etc/sudoers.d/riaps /etc/sudoers.d/riaps'
    - 'upload target/riaps/sysfiles/etc/systemd/system/sethostname.service /etc/systemd/system/sethostname.service'
    - 'upload target/riaps/sysfiles/usr/bin/set_unique_hostname /usr/bin/set_unique_hostname'
    - 'chroot "$1" chmod +x /usr/bin/set_unique_hostname'
    - '$BDEBSTRAP_HOOKS/enable-units "$1" sethostname.service'
      # Setup RIAPS User
    - 'chroot "$1" useradd -m -c "RIAPS App Developer" riaps -s /bin/bash -d /home/riaps -p "riaps"'
    - 'chroot "$1" chmod 0755 /home/riaps'
    - 'chroot "$1" usermod -aG sudo riaps'
    - 'chroot "$1" mkdir -p /home/riaps/riaps_apps'
    - 'chroot "$1" chown riaps:riaps /home/riaps/riaps_apps'
    - 'chroot "$1" mkdir -p /home/riaps/.ssh'
    - 'chroot "$1" chown riaps:riaps /home/riaps/.ssh'
      # Update date
    - 'chroot "$1" rdate -n -4 time.nist.gov'
      # Setup Watchdog timer
    - 'chroot "$1" echo " " >> /etc/sysctl.conf'
    - 'chroot "$1" echo "###################################################################" >> /etc/sysctl.conf'
    - 'chroot "$1" echo "# Enable Watchdog Timer on Kernel Panic and Kernel Oops" >> /etc/sysctl.conf'
    - 'chroot "$1" echo "# Added for RIAPS Platform (01/25/18, MM)" >> /etc/sysctl.conf'
    - 'chroot "$1" echo "# Enable OOM-Killer" >> /etc/sysctl.conf'
    - 'chroot "$1" echo "# Added for RIAPS Platform (10/25/21, MM)" >> /etc/sysctl.conf'
    - 'chroot "$1" echo "kernel.panic_on_oops = 1" >> /etc/sysctl.conf'
    - 'chroot "$1" echo "kernel.panic = 5" >> /etc/sysctl.conf'
    - 'chroot "$1" echo "vm.oom-kill = 1" >> /etc/sysctl.conf'
      # Build key libraries
    - 'upload target/riaps/install_files/external_build.sh /opt/riaps/external_build.sh'
    - 'chroot "$1" chmod a+x /opt/riaps/external_build.sh'
    # MM TODO: for the sake of time, remove this for the moment (concentrating on tsn build script)
    #- 'chroot "$1" /bin/bash -c "/opt/riaps/external_build.sh" >"$1/opt/riaps/external_build.log" 2>&1'
      # Setup TSN libraries
    - 'chroot "$1" apt-get remove libcurl4-gnutls-dev -y'
    - 'chroot "$1" apt-get install libcurl4-openssl-dev -y'
    - 'upload target/riaps/install_files/tsn_lib_build.sh /opt/riaps/tsn_lib_build.sh'
    - 'upload target/riaps/install_files/nw-configurator.c /opt/riaps/nw-configurator.c'
    - 'chroot "$1" chmod a+x /opt/riaps/tsn_lib_build.sh'
    - 'chroot "$1" /bin/bash -c "/opt/riaps/tsn_lib_build.sh" >"$1/opt/riaps/tsn_lib_build.log" 2>&1'

      # Setup place to pull out log files
    - 'mkdir -p /tmp-logs'
    #- 'cp $1/opt/riaps/external_build.log /tmp-logs/external_build.log'
    - 'cp $1/opt/riaps/tsn_lib_build.log logs/tsn_lib_build.log' 
    #- 'chroot "$1" rm -R /opt/riaps' - uncomment this once the image looks good

    # MM TODO: Things to add
    # riaps user device groups (gpio, dialout, pwm)
    # cpu freq setup (needed?)
    # network setups
    # python install: venv setup and installs, add opendht separate
    # remove packages used in external build, but not needed in image
    # setup riaps repo 
    # create riaps version file

    # MM TODO: 
    # Current issue - password not working for riaps account
    # Find customize-hook for echo "am64xx-evm" > "$1/etc/hostname - may not be necessary